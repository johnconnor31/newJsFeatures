{"version":3,"sources":["mouseMoveWithoutHooks.js","mouseMove.js","whyDidYouUpdate.js","BenchMark.js","App.js","serviceWorker.js","index.js"],"names":["MouseMove","state","handleMove","_ref","clientX","clientY","_this","setState","x","y","console","log","window","addEventListener","this","_this$state","react_default","a","createElement","React","Component","_useState","useState","_useState2","Object","slicedToArray","position","setPosition","handlePosChange","useCallback","e","alert","eventName","eventHandler","element","arguments","length","undefined","useEffect","removeEventListener","useEventListener","Counter","memo","props","name","prevProps","useRef","differenceDetails","current","keys","objectSpread","forEach","key","push","useWhyDidYouUpdate","style","count","counterStyle","fontSize","color","App","setCount","_useState3","_useState4","userId","setUserId","Fragment","alt","src","concat","onClick","arr","i","BenchMark","start","useLayoutEffect","Date","now","map","mouseMoveWithoutHooks","Home","About","react_router","exact","path","component","AboutUs","AboutYou","CurrentLocation","Contact","history","match","params","location","react_router_dom","activeClassName","to","MouseMoveWithoutHooks","render","src_BenchMark","WhyDidYouUpdate","Boolean","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.df19cd25.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass MouseMove extends React.Component {\r\n    state = {};\r\n    handleMove = ({clientX, clientY}) => {\r\n        this.setState({\r\n            x: clientX,\r\n            y: clientY\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        console.log('component mounted');\r\n        window.addEventListener('mousemove', this.handleMove);\r\n    }\r\n    render(){\r\n        const {x, y} = this.state;\r\n        return <div> current position is {x}, {y} </div>;\r\n    }\r\n}\r\n\r\nexport default MouseMove;","import React from 'react';\r\nimport { useState, useEffect, useCallback } from 'react';\r\n\r\nfunction MouseMove() {\r\n    const [position, setPosition] = useState({x: 0, y: 0});\r\n    const handlePosChange = useCallback(({clientX,clientY}) => {\r\n        console.log('position has changed', clientX, clientY );\r\n            setPosition({x:clientX,y: clientY});\r\n        },\r\n        [setPosition]\r\n    );\r\n    const handleClick = useCallback(e => window.alert('hello, you are at', e),[]);\r\n    \r\n    useEventListener('mousemove', handlePosChange);\r\n    // useEventListener('mouseup', handleClick);\r\n    return (\r\n        <div> \r\n            current Position is {position.x},{position.y}\r\n        </div>\r\n    ) \r\n}\r\n\r\nfunction useEventListener(eventName, eventHandler, element = window) {\r\n    useEffect(() => {\r\n        if(!(element && element.addEventListener)){\r\n            return;\r\n        }\r\n        element.addEventListener(eventName, eventHandler);\r\n        return () => {\r\n            element.removeEventListener(eventName, eventHandler);\r\n        };\r\n    },[element, eventName, eventHandler]);\r\n}\r\n\r\nexport default MouseMove;","import React from 'react';\r\nimport { useState, useRef, memo, useEffect } from 'react';\r\n\r\nconst Counter = memo((props) => {\r\n    useWhyDidYouUpdate('Counter', props);\r\n    return (\r\n        <div style={props.style}>{props.count}</div>\r\n    );\r\n});\r\nconst counterStyle = {\r\n    fontSize:'3rem',\r\n    color:'red'\r\n}\r\nfunction App(){\r\n    const [count, setCount] = useState(0);\r\n    const [userId, setUserId] = useState(0);\r\n        \r\n    return (\r\n        <>\r\n        <div>\r\n            <img alt='abc' src={`http://i.pravatar.cc/80?img=${userId}`} />\r\n            <button onClick={() => setUserId(userId + 1)}>Switch User</button>\r\n        </div>\r\n        <div>\r\n            <Counter style={counterStyle} count={count} />\r\n            <button onClick={() => setCount(count => count+1)}>Click me</button>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\nfunction useWhyDidYouUpdate(name, props){\r\n    const prevProps = useRef();\r\n    useEffect(() => {\r\n        const differenceDetails = [];\r\n        if(prevProps.current){\r\n            const keys = Object.keys({...props, ...prevProps.current});\r\n            keys.forEach(key => {\r\n                if(props[key]!==prevProps.current[key]){\r\n                    differenceDetails.push(key);\r\n                }\r\n            });\r\n            if(differenceDetails){\r\n                console.log('difference for ',name, 'is', differenceDetails);\r\n            }\r\n        }\r\n        prevProps.current = props;\r\n        });\r\n}\r\n\r\nexport default App;","import React,{ useLayoutEffect } from 'react';\r\nimport MouseMove from './mouseMoveWithoutHooks';\r\nconst arr= [];\r\nfor(let i=0;i<1000;i++){\r\n    arr.push(i);\r\n}\r\nfunction BenchMark({start}) {\r\n    useLayoutEffect(() => {\r\n        console.log(Date.now()-start);\r\n    });\r\n    return arr.map(key => {\r\n    console.log('mounting');\r\n    return <MouseMove key={key}/>\r\n    });\r\n}\r\n\r\nexport default BenchMark;","import React from 'react';\r\nimport './App.css';\r\nimport {  Route, BrowserRouter, NavLink, Switch } from 'react-router-dom';\r\nimport MouseMoveWithoutHooks from './mouseMoveWithoutHooks';\r\nimport MouseMove from './mouseMove';\r\nimport WhyDidYouUpdate from './whyDidYouUpdate';\r\nimport BenchMark from './BenchMark';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n    <ul>\r\n      <li>\r\n      <NavLink activeClassName='active' to='/'>Home</NavLink>\r\n      </li>\r\n      <li>\r\n      <NavLink to='/about'>About</NavLink>\r\n      </li>\r\n      <li>\r\n      <NavLink to='/contact'>Contact</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to='/mouseMoveRegular'>Move Mouse</NavLink>\r\n      </li>\r\n      <li>\r\n      <NavLink to='/mouseMove'>Move Mouse with hooks</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to='/Benchmark'>Benchmark</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to='/yUpdate'>Check Why You Updated</NavLink>\r\n      </li>\r\n    </ul>\r\n\r\n    <Route exact path='/' component={Home} />\r\n    <Route path='/about' component={About} />\r\n    <Route path='/contact' component={Contact} />\r\n    <Route path='/mouseMoveRegular' component={MouseMoveWithoutHooks} />\r\n    <Route path='/mouseMove' component={MouseMove} />\r\n    <Route path='/Benchmark' render={() => <BenchMark start={Date.now()} />} />\r\n    <Route path='/yUpdate' component={WhyDidYouUpdate} />\r\n    </BrowserRouter>\r\n  );\r\n}\r\nfunction Home() {\r\n  return <h2>HOME</h2>;\r\n}\r\nfunction About (props) {\r\n  return (\r\n    <>\r\n    <h2>there are lot of things to talk about. Namely: </h2>\r\n  <Switch>\r\n    <Route exact path='/about/' component={AboutUs} />\r\n    <Route path='/about/me/' component={AboutYou} />\r\n    <Route path='/about/location/:location' component={CurrentLocation} />\r\n  </Switch>\r\n  </>\r\n  );\r\n}\r\nfunction Contact() {\r\n  return <h2>Contact</h2>;\r\n}\r\n\r\nfunction AboutUs() {\r\n  return <h4>We are yourself</h4>\r\n}\r\n\r\nfunction AboutYou(props) {\r\n  console.log('about you',props);\r\n  return (\r\n    <>\r\n    <h4>Please write about yourself  </h4>\r\n    <input />\r\n    <button onClick={()=> props.history.push('/')} >Submit</button>\r\n  </>);\r\n}\r\n\r\nfunction  CurrentLocation(props) {\r\n  return <h4>We are currently in {props.match.params.location}</h4>\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}